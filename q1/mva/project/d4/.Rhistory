panel.grid.major.x = element_blank())
################################## BEDROOMS ##################################
ggplot(dfOg, aes(x=c2, y=bedrooms, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
h1 <- ggplot(dfOg[df$c2==1,], aes(x=bedrooms)) +
geom_bar(fill="#f8766d") +
scale_x_continuous(breaks = seq(1, 10, 1), lim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 5000, 1500), lim = c(0, 6000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h2 <- ggplot(dfOg[df$c2==2,], aes(x=bedrooms)) +
geom_bar(fill="#00ba38") +
scale_x_continuous(breaks = seq(1, 10, 1), lim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 5000, 1500), lim = c(0, 6000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h3 <- ggplot(dfOg[df$c2==3,], aes(x=bedrooms)) +
geom_bar(fill="#619cff") +
scale_x_continuous(breaks = seq(1, 10, 1), lim = c(0, 10)) +
scale_y_continuous(breaks = seq(0, 5000, 1500), lim = c(0, 6000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
grid.arrange(h1, h2, h3)
################################### LICENSE ##################################
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################ PROPERTY TYPE ###############################
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################## BEDROOMS ##################################
ggplot(dfOg, aes(x=c2, y=bedrooms, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
hist(dfOg$bedrooms)
pairwise.wilcox.test(dfOg$bedrooms,dfOg$c2, exact=F)
pairwise.wilcox.test(dfOg$bedrooms,dfOg$c2, exact=F, alternative="greater")
pairwise.wilcox.test(dfOg$bedrooms,dfOg$c2, exact=F, alternative="less")
# P-value is less than 0.05. We reject the null hypothesis
# Bedrooms in C1 > C2 > C3
pairwise.wilcox.test(dfOg$review_scores_value,dfOg$c2, exact=F, alternative="less")
# P-value is less than 0.05. We reject the null hypothesis
# Bedrooms in C1 > C2 > C3
pairwise.wilcox.test(dfOg$review_scores_value,dfOg$c2, exact=F)
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
hist(df$host_total_listings_count)
# P-value is less than 0.05. We reject the null hypothesis
# Means of review value is not equal in the clusters
pairwise.wilcox.test(dfOg$host_total_listings_count,dfOg$c2, exact=F)
############################ HOST TOTAL LISTINGS #############################
ggplot(dfOg, aes(x=c2, y=log(host_total_listings_count), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
# P-value is less than 0.05. We reject the null hypothesis
# Means of host total listings is not equal in the clusters
pairwise.wilcox.test(dfOg$host_response_rate,dfOg$c2, exact=F)
############################ HOST RESPONSE RATE ##############################
ggplot(dfOg, aes(x=c2, y=host_response_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=host_acceptance_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=log(number_of_reviews), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=host_acceptance_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################ HOST RESPONSE TIME ##############################
ggplot(dfOg, aes(x = c2, fill = host_response_time)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=host_acceptance_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
# P-value is less than 0.05. We reject the null hypothesis
# Means of host total listings is not equal in the clusters
pairwise.wilcox.test(dfOg$host_acceptance_rate,dfOg$c2, exact=F)
############################## MINIMUM NIGHTS ################################
ggplot(dfOg[dfOg$minimum_nights>=30,], aes(x=c2), color=c2) +
geom_bar(position = "dodge", color="black")
################################### LICENSE ##################################
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################ PROPERTY TYPE ###############################
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################## BATH TYPE #################################
ggplot(dfOg, aes(x = c2, fill = type_bath)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
#################################### AIRCON ##################################
ggplot(df, aes(x = c2, fill = aircon)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
###################################### TV ####################################
ggplot(dfOg, aes(x = c2, fill = tv)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################# OUtdoor space ##############################
ggplot(dfOg, aes(x = c2, fill = outdoorSpace)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
# Propability of participation depending on foreign status
table( dfOg$license, dfOg$c2 )
# Margin frequencies:
margin.table(table(dfOg$license, dfOg$c2),2)
# Chi squared test over the expected frequencies:
prop.table( table( dfOg$license, dfOg$c2 ),2 )
################################### LICENSE ##################################
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
prop.test( c(254, 147), c(656, 216), correct = F)
prop.test( table( dfOg$license, dfOg$c2 ), correct = F)
prop.test( table( dfOg$license, dfOg$c2 )[0:1,], correct = F)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
# Propability of participation depending on foreign status
prop <- table( dfOg$license, dfOg$c2 )
# Margin frequencies:
total <- margin.table(table(dfOg$license, dfOg$c2),2)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
prop.test( prop[0:1,] total[0:1,], correct = F)
prop.test( prop[0:1,], total[0:1,], correct = F)
# Margin frequencies:
total <- margin.table(table(dfOg$license, dfOg$c2),2)
total
prop.test( prop[1:2,], total[1:2,], correct = F)
total[1]
total[1:2]
prop.test( prop[1:2,], total[1:2], correct = F)
prop[1:2,]
prop[,1:2]
prop.test( prop[,1:2], total[1:2], correct = F)
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$license )
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$license),2)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
prop.test( prop[,1:2], total[1:2], correct = F)
dfOg$c2
# Propability of participation depending on foreign status
prop <- table( dfOg$license, dfOg$c2 )
# Margin frequencies:
total <- margin.table(table(dfOg$license, dfOg$c2),2)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
prop.test( prop[,1:2], total[1:2], correct = F)
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$license),2)
total
total[3]
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
prop.test( prop[3,1:2], total[3], correct = F)
prop[3,1:2]
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$license )
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$license),2)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
prop.test( prop[1:2, 3], total[3], correct = F)
prop[1:2, 3]
prop
prop.test( t(prop[1:2, 3]), total[3], correct = F)
prop.test( t(prop[c(1,3), 3]), total[3], correct = F)
# p-value is below 0.05 for both cases
# C1 has more independent licensed hosts than C2 and C3
prop.test( t(prop[2:3, 1]), total[3], correct = F)
prop.test( t(prop[c(1,3), 1]), total[3], correct = F)
################################ PROPERTY TYPE ###############################
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
# Independent is more common in C1 than the rest
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$property_type )
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$property_type),2)
prop
# p-value is below 0.05 for both cases
# Entire rental units are more common in C1 than the rest
prop.test( t(prop[1:2, 1]), total[1], correct = F)
prop.test( t(prop[c(1,3), 1]), total[1], correct = F)
prop
# p-value is below 0.05 for both cases
# C3 has more exempt licensed hosts than C1 and C2
prop.test( t(prop[2:3, 3]), total[3], correct = F)
prop.test( t(prop[c(1,3), 3]), total[3], correct = F)
#################################### AIRCON ##################################
ggplot(df, aes(x = c2, fill = aircon)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$aircon[df$aircon==T] )
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$aircon )
prop
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$aircon),2)
total
# p-value is below 0.05 for both cases
# Entire rental units are more common in C1 than the rest
prop.test( t(prop[1:2, 2]), total[2], correct = F)
prop.test( t(prop[c(1,3), 2]), total[2], correct = F)
# Propability of participation depending on foreign status
prop <- table( dfOg$c2, dfOg$outdoorSpace )
# Margin frequencies:
total <- margin.table(table(dfOg$c2, dfOg$outdoorSpace),2)
# Chi squared test over the expected frequencies:
prop.table( prop ,2 )
# p-value is below 0.05 for both cases
# X1 listings are more likely to have aircon than C2 and C3
prop.test( t(prop[1:2, 2]), total[2], correct = F)
prop.test( t(prop[c(1,3), 2]), total[2], correct = F)
##################################### POOL ###################################
ggplot(dfOg, aes(x = c2, fill = pool)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
##################################### POOL ###################################
ggplot(dfOg, aes(x = c2, fill = bbq)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
##################################### POOL ###################################
ggplot(dfOg, aes(x = c2, fill = parkingOnpremise)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
##################################### POOL ###################################
ggplot(dfOg, aes(x = c2, fill = parkingOnPremise)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
scale_fill_discrete(name = "Clusters")
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())+ labs(color='NEW LEGEND TITLE')
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(color='Cluster')
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Review Score Value', color='Cluster') +
h1 <- ggplot(dfOg[df$c2==1,], aes(x=review_scores_value)) +
geom_histogram(fill="#f8766d") +
scale_x_continuous(breaks = seq(0, 5, 1), lim = c(0, 5)) +
scale_y_continuous(breaks = seq(0, 4000, 1000), lim = c(0, 4000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
############################### REVIEW VALUE ################################
ggplot(dfOg, aes(x=c2, y=review_scores_value, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Review Score Value', color='Cluster')
h1 <- ggplot(dfOg[df$c2==1,], aes(x=review_scores_value)) +
geom_histogram(fill="#f8766d") +
scale_x_continuous(breaks = seq(0, 5, 1), lim = c(0, 5)) +
scale_y_continuous(breaks = seq(0, 4000, 1000), lim = c(0, 4000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h2 <- ggplot(dfOg[df$c2==2,], aes(x=review_scores_value)) +
geom_histogram(fill="#00ba38") +
scale_x_continuous(breaks = seq(0, 5, 1), lim = c(NA, 5)) +
scale_y_continuous(breaks = seq(0, 4000, 1000), lim = c(0, 4000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h3 <- ggplot(dfOg[df$c2==3,], aes(x=review_scores_value)) +
geom_histogram(fill="#619cff") +
scale_x_continuous(breaks = seq(0, 5, 1), lim = c(0, 5)) +
scale_y_continuous(breaks = seq(0, 4000, 1000), lim = c(0, 4000)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
grid.arrange(h1, h2, h3)
h1 <- ggplot(dfOg[df$c2==1,], aes(x=log(host_total_listings_count))) +
geom_histogram(fill="#f8766d") +
scale_x_continuous(breaks = seq(0, 9, 1), lim = c(NA, 9)) +
scale_y_continuous(breaks = seq(0, 2500, 1000), lim = c(0, 2500)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h2 <- ggplot(dfOg[df$c2==2,], aes(x=log(host_total_listings_count))) +
geom_histogram(fill="#00ba38") +
scale_x_continuous(breaks = seq(0, 9, 1), lim = c(NA, 9)) +
scale_y_continuous(breaks = seq(0, 2500, 1000), lim = c(0, 2500)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
h3 <- ggplot(dfOg[df$c2==3,], aes(x=log(host_total_listings_count))) +
geom_histogram(fill="#619cff") +
scale_x_continuous(breaks = seq(0, 9, 1), lim = c(NA, 9)) +
scale_y_continuous(breaks = seq(0, 2500, 1000), lim = c(0, 2500)) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank())
grid.arrange(h1, h2, h3)
############################ HOST TOTAL LISTINGS #############################
ggplot(dfOg, aes(x=c2, y=log(host_total_listings_count), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################ HOST TOTAL LISTINGS #############################
ggplot(dfOg, aes(x=c2, y=log(host_total_listings_count), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Host Listings', color='Cluster')
############################ HOST RESPONSE RATE ##############################
ggplot(dfOg, aes(x=c2, y=host_response_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################ HOST RESPONSE TIME ##############################
ggplot(dfOg, aes(x = c2, fill = host_response_time)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################ HOST TOTAL LISTINGS #############################
ggplot(dfOg, aes(x=c2, y=log(host_total_listings_count), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Num Host Listings', color='Cluster')
############################ HOST RESPONSE TIME ##############################
ggplot(dfOg, aes(x = c2, fill = host_response_time)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu", limits = c("within an hour", "within a few hours", "within a day", "a few days or more", "Unknown")) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Host Response Time')
############################ HOST RESPONSE TIME ##############################
dfOg$host_response_time <- factor(dfOg$host_response_time, levels = c("within an hour", "within a few hours", "within a day", "a few days or more", "Unknown"))
ggplot(dfOg, aes(x = c2, fill = host_response_time)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu", limits = c("within an hour", "within a few hours", "within a day", "a few days or more", "Unknown")) +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Host Response Time')
ggplot(dfOg, aes(x = c2, fill = host_response_time)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Host Response Time')
############################ HOST TOTAL LISTINGS #############################
ggplot(dfOg, aes(x=c2, y=log(host_total_listings_count), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Num Host Listings', color='Cluster')
################################ PROPERTY TYPE ###############################
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################ PROPERTY TYPE ###############################
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Property Type')
################################ PROPERTY TYPE ###############################
dfOg$property_type <- factor(df$property_type, levels = c("Entire rental unit", "Private room in rental unit", "Others"))
ggplot(dfOg, aes(x = c2, fill = property_type)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Property Type')
################################### LICENSE ##################################
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
################################### LICENSE ##################################
dfOg$license <- factor(df$license, levels = c("Independent", "Exempt", "Hotel", "Others", "Unknown"))
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='License')
################################### LICENSE ##################################
dfOg$license <- factor(df$license, levels = c("Independent", "Exempt", "Hotel", "Other", "Unknown"))
ggplot(dfOg, aes(x = c2, fill = license)) + #explains
geom_bar(position = "dodge", color="black") +
scale_fill_brewer(palette = "YlGnBu") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='License')
#################################### AIRCON ##################################
ggplot(df, aes(x = c2, fill = aircon)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Aircon')
################################# OUtdoor space ##############################
ggplot(dfOg, aes(x = c2, fill = outdoorSpace)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Outdoor Space')
#################################### AIRCON ##################################
ggplot(df, aes(x = c2, fill = aircon)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', fill='Aircon')
################################# OUtdoor space ##############################
ggplot(dfOg, aes(x = c2, fill = outdoorSpace)) + #explains
geom_bar(position = "dodge") +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', fill='Outdoor Space')
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=host_acceptance_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Count', color='Host Acceptance Rate')
########################### HOST ACCEPTANCE RATE #############################
ggplot(dfOg, aes(x=c2, y=host_acceptance_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank()) +
labs(x='Cluster', y='Host Acceptance Rate', color='Cluster')
############################ NUMBER OF REVIEWS ###############################
ggplot(dfOg, aes(x=c2, y=log(number_of_reviews), color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
############################ HOST RESPONSE RATE ##############################
ggplot(dfOg, aes(x=c2, y=host_response_rate, color=c2)) + #explains
geom_boxplot() +
theme( # remove the vertical grid lines
panel.grid.major.x = element_blank())
